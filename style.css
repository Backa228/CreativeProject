@font-face {
    font-family: 'Nunito-Bold';
    src: url(fonts/Nunito-Bold.eot);
    src: url(fonts/Nunito-Bold.eot?#iefix) format('embedded-opentype'),
         url(fonts/Nunito-Bold.ttf) format('truetype'),
         url(fonts/Nunito-Bold.otf) format('otf'),
         url(fonts/Nunito-Bold.svg#Nunito-Bold) format('svg'),
         url(fonts/Nunito-Bold.woff) format('woff'),
         url(fonts/Nunito-Bold.woff2) format('woff2');

  } 

 @font-face {
    font-family: 'Nunito-ExtraLightItalic';
    src: url(fonts/Nunito-ExtraLightItalic.eot);
    src: url(fonts/Nunito-ExtraLightItalic.eot?#iefix) format('embedded-opentype'),
         url(fonts/Nunito-ExtraLightItalic.otf) format('otf'),
         url(fonts/Nunito-ExtraLightItalic.svg#Nunito-ExtraLightItalic) format('svg'),
         url(fonts/Nunito-ExtraLightItalic.ttf) format('truetype'),
         url(fonts/Nunito-ExtraLightItalic.woff) format('woff'),
         url(fonts/Nunito-ExtraLightItalic.woff2) format('woff2');
  } 

@font-face {
    font-family: 'Nunito-ExtraLight';
    src: url(fonts/Nunito-ExtraLight.eot);
    src: url(fonts/Nunito-ExtraLight.eot?#iefix) format('embedded-opentype'),
         url(fonts/Nunito-ExtraLight.otf) format('otf'),
         url(fonts/Nunito-ExtraLight.svg#Nunito-ExtraLight) format('svg'),
         url(fonts/Nunito-ExtraLight.ttf) format('truetype'),
         url(fonts/Nunito-ExtraLight.woff) format('woff'),
         url(fonts/Nunito-ExtraLight.woff2) format('woff2');
  }
  

body
{
    font-family: 'Nunito-ExtraLight';
    background-color: rgb(255, 170, 0);
}

a
{
    width: 50vw;
}

/* #region COLNMNS */



/*Вдастівості для батьківського елементу

column-count, column-width, columns

column-width - визначає ширину стовця. Але фактична ширина 
стовпчика може бути більшою або меншою.
column-count - визначає кількість колонок, яку потрібно побудувати.
column-count - визначає кількість колонок, яку потрібно побудувати.

Коли вказуємо column-count та column-width, column-count - максимальна кількість колонок,
column-width - мінімальна ширина колонки.

columns - об'єднує дві властивості.
column-gap - розрив між колонками. За замовчуванням column-gap = 1em. 
column-rule - визначає стиль границь між колонками.
Коли вказуємо column-count та column-width, column-count - максимальна кількість колонок,
column-width - мінімальна ширина колонки.
Значення column-width (px, em, rem)
em = font-size в пікселях */
/*column-fill - визначає, як заповнювати стовпці - збалансовано чи ні.
balance(за замовчуванням) - контент всередині колонок розподіляєься рівномірно.
auto - стовпці заповнюються послідовно, коли контент не влазить в минулу колонку по висоті.
 і працює тільки коли вказана висота*/

 /*Властивість вкладених елементів: column-span - визначає, як повинен відображатися елемент в багатоколоковому тексті - 
займати ширину всіх колонок або тільки одну з них*/

/*break-inside - визначає, чи буде переходити контент з одного вкаленого елменту в інший.*/
/*#endregion*/

/*#region MEASURE*/
/*Одиниці виміру

px - це абсолютна одиниця виміру, фіксована величина.

em - це відносна одиниця виміру, яка залежить від поточного або успадкованого розміру шрифту.
Потрібно пам'ятати який коекретно шрифт впливає на обчислення (успадкування)

rem - це відносна одиниця виміру, яка залежить або розміру шрифта, який прописаний в <html>,
або розмір шрифта браузера по замовчуванню(16px)*/

/*<html>,
або розмір шрифта браузера по замовчуванню(16px)

vw, vh - це відносна одиниця виміру, яка залежить від розмірів viewport браузера (розмірів браузера)
vmin - залежить відносно мінімального значення між vw, vh
vmax - залежить відносно максимальне значення між vw, vh
% - це відносна величина, її визначають ВІДНОСНО різних значень:
ширина width - відносно батьківського елемента
висота height  - відносно

при відносному позиціонуванні (position:relative) потрібні тіж самі умови
при абсолютному позиціонуванні (position:absolute) висоту батьківського елемента вказувати не обов'язково
відступи padding/margin - відносно ШИРИНИ батьківського елемента, навіть якщо задаються вертикальні відступи
transform:translate(x,y) - відносно ширини/висоти самого об'єкта до якого застосовано властивість
font-size, line-height - відносно розміру властивості font-size*/


.text{
    background-color: aliceblue;
    columns: 3 300px;
    column-gap: 50px;
    column-rule: 5px dotted rgb(153, 51, 134);
    /*column-fill: balance;
    height: 500px;*/
}

.text #par2 
{
    /*column-span: all;*/
}

.text h2
{
    background-color: black;
    padding: 15px;
    color: aliceblue;

    column-span: all;
}

.text p
{
    break-inside: avoid;
    margin: 0;
}

.text span
{
    color: chocolate;
}

.em{
    background-color: rgb(176, 251, 0);
    width: 5em;
    height: 5em;
}

.ex 
{
    width: 50%;
    background-color: aqua;
}

.measure
{
    width: 300px;
    display: ;
}



/*#endregion*/

.menu ul
{
    display: flex;
    align-items: center;
    justify-content: space-around;
    text-align: center;
    list-style: none;
    width: 37.5rem;
    background-color: rgb(0, 78, 0);
    border-radius: 10px;
    padding: 0;
}

header
{
    background-color: green;
    display: flex;
    justify-content: space-between;
    align-items: center;
    border-radius: 20px;
    font-family: 'Nunito-Bold';
    font-size: 20px;
}

.main-menu
{
    display: flex;
    justify-content: space-between;
    margin-right: 10rem;
    width: 63.375rem;
    flex-wrap: wrap;
}

.menu
{
    text-align: center;
}

.logo
{
    margin-left: 2.2rem;
}

.logo img
{
    width: 80px;
}

.search
{
    display: flex;
    align-items: center;
    justify-content: space-around;
    text-align: center;
}

.search input[type="search"] 
{
    width: 11.25rem;
    height: 2.5rem;
    border-radius: 20px;
    background-color: rgb(255, 170, 0);/*rgb(82, 1, 82)*/
    border: none;
    font-size: 1.25rem;
    padding-left: 3.125rem;
}

.search input[type="search"]::-webkit-search-cancel-button
{
    -webkit-appearance: none;
    height: 1em;
    width: 1em;
    /*background: url(img\close.png);*/
    background-color: rgb(250, 133, 0);
    /*background-size: auto;
    opacity: 0.5;*/
    border-radius: 20px;
}

.search input[type="search"]::placeholder
{
    font-size: 20px;
    font-family: 'Nunito-bold';
    color: black;
    padding-left: 30%;
}

.search .btn-search i
{
    background-color: rgb(255, 170, 0);
    border-radius: 50%;
    padding: 0.625rem;
    transform: translateX(100%);
}

.icons
{
    display: flex;
    align-items: center;
    justify-content: space-around;
    text-align: center;
    width: 6.25em;
    font-size: 1.6rem;
}

.add-menu
{
    display: flex;
    align-items: center;
    justify-content: space-between;
    width: 19.375rem;
    font-size: rem(25);/*1.7rem*/
}

.icons a
{
    color: black;
}

.icons i
{
    border-radius: 50%;
    padding: 0.625rem;
    background-color: green;
}

.icons i:hover 
{
    border-radius: 50%;
    padding: 0.625rem;
    background-color: rgb(0, 72, 0);
}

.btn-search i:hover
{
    border-radius: 50%;
    padding: 0.625rem;
    background-color: rgb(171, 114, 1);
}

@function rem($px)
{
    $result: math.div($px, 16) + rem;
    @return $result
}

@function em($px, $fs)
{
    $result: math.div($px, $fs) + em;
    @return $result;
}

@function prc($pxOne, $pxTwo)
{
    $result: math.div($pxOne, $pxTwo) * 100%;
    @return $result;
}