@font-face {
    font-family: 'Nunito-Bold';
    src: url(fonts/Nunito-Bold.eot);
    src: url(fonts/Nunito-Bold.eot?#iefix) format('embedded-opentype'),
         url(fonts/Nunito-Bold.ttf) format('truetype'),
         url(fonts/Nunito-Bold.otf) format('otf'),
         url(fonts/Nunito-Bold.svg#Nunito-Bold) format('svg'),
         url(fonts/Nunito-Bold.woff) format('woff'),
         url(fonts/Nunito-Bold.woff2) format('woff2');

  } 

 @font-face {
    font-family: 'Nunito-ExtraLightItalic';
    src: url(fonts/Nunito-ExtraLightItalic.eot);
    src: url(fonts/Nunito-ExtraLightItalic.eot?#iefix) format('embedded-opentype'),
         url(fonts/Nunito-ExtraLightItalic.otf) format('otf'),
         url(fonts/Nunito-ExtraLightItalic.svg#Nunito-ExtraLightItalic) format('svg'),
         url(fonts/Nunito-ExtraLightItalic.ttf) format('truetype'),
         url(fonts/Nunito-ExtraLightItalic.woff) format('woff'),
         url(fonts/Nunito-ExtraLightItalic.woff2) format('woff2');
  } 

@font-face {
    font-family: 'Nunito-ExtraLight';
    src: url(fonts/Nunito-ExtraLight.eot);
    src: url(fonts/Nunito-ExtraLight.eot?#iefix) format('embedded-opentype'),
         url(fonts/Nunito-ExtraLight.otf) format('otf'),
         url(fonts/Nunito-ExtraLight.svg#Nunito-ExtraLight) format('svg'),
         url(fonts/Nunito-ExtraLight.ttf) format('truetype'),
         url(fonts/Nunito-ExtraLight.woff) format('woff'),
         url(fonts/Nunito-ExtraLight.woff2) format('woff2');
  }
  

body
{
    font-family: 'Nunito-ExtraLight';
    background-color: var(--white);
}
/* #region COLNMNS */



/*Вдастівості для батьківського елементу

column-count, column-width, columns

column-width - визначає ширину стовця. Але фактична ширина 
стовпчика може бути більшою або меншою.
column-count - визначає кількість колонок, яку потрібно побудувати.
column-count - визначає кількість колонок, яку потрібно побудувати.

Коли вказуємо column-count та column-width, column-count - максимальна кількість колонок,
column-width - мінімальна ширина колонки.

columns - об'єднує дві властивості.
column-gap - розрив між колонками. За замовчуванням column-gap = 1em. 
column-rule - визначає стиль границь між колонками.
Коли вказуємо column-count та column-width, column-count - максимальна кількість колонок,
column-width - мінімальна ширина колонки.
Значення column-width (px, em, rem)
em = font-size в пікселях */
/*column-fill - визначає, як заповнювати стовпці - збалансовано чи ні.
balance(за замовчуванням) - контент всередині колонок розподіляєься рівномірно.
auto - стовпці заповнюються послідовно, коли контент не влазить в минулу колонку по висоті.
 і працює тільки коли вказана висота*/

 /*Властивість вкладених елементів: column-span - визначає, як повинен відображатися елемент в багатоколоковому тексті - 
займати ширину всіх колонок або тільки одну з них*/

/*break-inside - визначає, чи буде переходити контент з одного вкаленого елменту в інший.*/
/*#endregion*/

/*#region MEASURE*/
/*Одиниці виміру

px - це абсолютна одиниця виміру, фіксована величина.

em - це відносна одиниця виміру, яка залежить від поточного або успадкованого розміру шрифту.
Потрібно пам'ятати який коекретно шрифт впливає на обчислення (успадкування)

rem - це відносна одиниця виміру, яка залежить або розміру шрифта, який прописаний в <html>,
або розмір шрифта браузера по замовчуванню(16px)*/

/*<html>,
або розмір шрифта браузера по замовчуванню(16px)

vw, vh - це відносна одиниця виміру, яка залежить від розмірів viewport браузера (розмірів браузера)
vmin - залежить відносно мінімального значення між vw, vh
vmax - залежить відносно максимальне значення між vw, vh
% - це відносна величина, її визначають ВІДНОСНО різних значень:
ширина width - відносно батьківського елемента
висота height  - відносно

при відносному позиціонуванні (position:relative) потрібні тіж самі умови
при абсолютному позиціонуванні (position:absolute) висоту батьківського елемента вказувати не обов'язково
відступи padding/margin - відносно ШИРИНИ батьківського елемента, навіть якщо задаються вертикальні відступи
transform:translate(x,y) - відносно ширини/висоти самого об'єкта до якого застосовано властивість
font-size, line-height - відносно розміру властивості font-size*/

header
{
    background-color: var(--lightgreen);
    border-radius: 20px;
    font-family: 'Nunito-Bold';
    font-size: 20px;
}

.main-header
{
    display: flex;
    align-items: center;
    justify-content: space-between;
}

.text{
    background-color: aliceblue;
    columns: 3 300px;
    column-gap: 50px;
    column-rule: 5px dotted rgb(153, 51, 134);
    /*column-fill: balance;
    height: 500px;*/
}

.text #par2 
{
    /*column-span: all;*/
}

.text h2
{
    background-color: black;
    padding: 15px;
    color: aliceblue;

    column-span: all;
}

.text p
{
    break-inside: avoid;
    margin: 0;
}

.text span
{
    color: chocolate;
}

.em{
    background-color: rgb(176, 251, 0);
    width: 5em;
    height: 5em;
}

.ex 
{
    width: 50%;
    background-color: aqua;
}

.measure
{
    width: 300px;
    display: ;
}



/*#endregion*/

:root 
{
    --lightorange: rgb(255, 170, 0);
    --darkorange: rgb(171, 114, 1);
    --lightgreen: green;
    --darcgreen: rgb(0, 72, 0);
    --grayNike: #F6F6F6;
    --darkGrayNike: #CACACB;
    --white: rgb(255, 255, 255);
}

.logo
{
    margin-left: 2.2rem;
}

.logo img
{
    width: 80px;
}

.menu
{
    text-align: center;
}

.main-menu
{
    display: flex;
    justify-content: space-between;
    margin-right: 10rem;
    width: 63.375rem;
    flex-wrap: wrap;
}

.menu ul
{
    display: flex;
    align-items: center;
    justify-content: space-around;
    text-align: center;
    list-style: none;
    width: 37.5rem;
    height: calc(65/16*1rem);
    /* background-color: rgb(0, 78, 0);
    border-radius: 10px;*/
    padding: 0;
    margin: 0;
}

.menu ul li
{
    display: flex;
    align-items: center;
    margin: 0;
    height: calc(40/16*1rem);
    border-bottom: 3px solid var(--lightgreen);
}

.menu ul li a
{
    text-decoration: none;
    color: black;
}

.menu ul li:hover
{
    border-bottom: 3px solid black;
}

.search
{
    display: flex;
    align-items: center;
    justify-content: space-around;
    text-align: center;
}

.search input[type="search"] 
{
    width: 11.25rem;
    height: calc(48/16*1rem);
    border-radius: 20px;
    background-color: var(--lightorange);/*rgb(82, 1, 82)*/
    border: none;
    font-size: 1.25rem;
    padding-left: 3.125rem;
}

.search input[type="search"]::-webkit-search-cancel-button 
{
    -webkit-appearance: none;
    height: calc(20/20*1em);
    width: calc(20/20*1em);
    background: url(img/close.png);
    background-size: cover;
    opacity: 0.7;
}

.search input[type="search"]::placeholder
{
    font-size: 20px;
    font-family: 'Nunito-bold';
    color: black;
    padding-left: 30%;
}

.search .btn-search i
{
    background-color: var(--lightorange);
    border-radius: 50%;
    padding: 0.625rem;
    transform: translateX(100%);
}

.icons
{
    display: flex;
    align-items: center;
    justify-content: space-around;
    text-align: center;
    width: 6.25em;
    font-size: 1.6rem;
}
 
.menu-icon
{
    display: none;
}

.catalog
{
    background-color: var(--lightgreen);
    display: none;
    justify-content: center;
    align-items: flex-start;
    column-gap: 1em;
    border-radius: 0 0 20px 20px ;
}

#catalog-1, #catalog-2, #catalog-3, #catalog-4
{
    columns: 5 200px;
}

#catalog-5
{
    columns: 3 200px;
}

#catalog-6
{
    columns: 4 200px;
}

.catalog div ul
{
    list-style: none;
    padding: 0;
    font-size: calc(20/16*1rem);
}

.catalog div
{
    margin: 0;
    padding: 15px;
    break-inside: avoid;
}

.catalog div h3
{
    font-size: calc(22/16*1rem);
}

.catalog-anim-in
{
    animation-name: slide;
    animation-duration: 1000ms;
}

.catalog-anim-out
{
    animation-name: slide-out;
    animation-duration: 1000ms;
}

.add-menu {
    display: flex;
    align-items: center;
    justify-content: space-between;
    width: 19.375rem;
    font-size: calc(28 / 16 * 1rem);
    /*1.75rem*/
}

.icons a {
    color: black;
}

.icons i {
    border-radius: 20px;
    padding: 0.625rem;
    background-color: var(--lightgreen);
}

.menu-icon{
    display: none;
}

.sidebar-menu{
    position: fixed;
    top: 0;
    right: -400px;
    width: 400px;
    height: 100%;
    background-color: #FFFF;
    z-index: 999;
    transition: right 0.3s ease;
    filter: blur();
    font-family: 'Nunito-Bold';
}

.sidebar-menu li {
    padding: 5px;
    border-bottom: 4px solid white;
}

.sidebar-menu li:hover {
    border-bottom: 4px solid var(--darcgreen);
}


.sidebar-menu ul{
    list-style: none;
    padding: 5;
}

.sidebar-menu a{
    text-decoration: none;
    color: black;
    font-size: calc(34/16*1rem);
}

.close-btn{
    padding: calc(16/16*1rem);
    background-color: rgb(--darcgreen);
    border-radius: 50%;
    text-align: right;
}

.close-btn i{
    border-radius: 50%;
    padding: calc(10/16*1rem) calc(14/16*1rem);
    font-size: 25px;
    color: aliceblue;
    background-color: black;
}

.sidebar-menu.active{
    right: 0;    
}

.content {
    filter: blur(0px);
    transition: filter 0.3 ease;
}

.blur {
    filter: blur(5px);
}

.icons i:hover {
    border-radius: 50%;
    padding: 0.625rem;
    background-color: var(--darcgreen);
}

.btn-search i:hover {
    border-radius: 20px;
    padding: 0.625rem;
    background-color: var(--darkorange);
}

@media screen and (max-width: 1200px){
    .menu, .search form{
        display: none;
    }

    .menu-icon{
        display: block;
    }

    .main-menu, .add-menu{

        width: calc(265/16*1rem);
    }

    .main-menu {
        margin-right: 1rem;
    }

        .search .btn-search i {
            transform: translateX(0%);
        }

    .icons{
        width: calc(165/16*1rem);
    }
}

.gallery {
    display: flex;
    align-items: center;
    position: relative;
    width: 100%;
    overflow: hidden;
}

.gallery-container {
    display: flex;
    gap: 30px;
    width: max-content;
}

.gallery-item img {
    height: 100%;
    width: 100%;
    object-fit: cover;
}

.gallery-item{
    width: 270px;
    height: 270px;
    position: relative;
    overflow: hidden;
}

.gallery-item h3 {
    position: absolute;
    bottom: 5px;
    left: 50%;
    transform: translateX(-50%);
    margin: 0;
    padding: 10px 15px;
    text-align: center;
    font-size: 17px;
}

.prev i, .next i{
    padding: calc((30 - 20) / 2 * 1px) calc((30 - 12.5) / 2 * 1px);
} 

.prev, .next{
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    background-color: var(--darkGrayNike);
    border-radius: 50%;
    cursor: pointer;   
    font-size: 20px;
    z-index: 10; 
}

.prev:hover, .next:hover{
    background-color: var(--darkGrayNike);
    border-radius: 30%;
}

.head1 {
    margin-left: 2.5rem;
    /* transform: translateX(-50%); */
}

.prev {
    left: 5px;
}

.next {
    right: 5px;
}

@keyframes slide
{
    0%
    {
        opacity: 0;
        max-height: 0;
    }

    50%
    {
        opacity: 0;
    }

    100%
    {
        opacity: 1;
        max-height: 600px;
    }
}

@keyframes slide-out
{
    0%
    {
        opacity: 1;
        max-height: 600px;
    }

    50%
    {
        opacity: 0;
    }

    100%
    {
        opacity: 0;
        max-height: 0;
    }
}
/*#region*/
@function rem($px)
{
    $result: math.div($px, 16) + rem;
    @return $result
}

@function em($px, $fs)
{
    $result: math.div($px, $fs) + em;
    @return $result;
}

@function prc($pxOne, $pxTwo)
{
    $result: math.div($pxOne, $pxTwo) * 100%;
    @return $result;
}
/*#endregion*/